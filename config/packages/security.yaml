security:
    encoders:
        App\Shared\Infrastructure\Framework\Symfony\Security\SecurityUser:
            algorithm: auto
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: false
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        jwt:
            id: App\Shared\Infrastructure\Framework\Symfony\Security\JWTUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_doc:
            pattern: ^/api/doc
            security: false
        api_public:
            pattern: ^/api/v1/users/(auth|register)
            stateless: true
            security: false
        api:
            pattern: ^/api/.*
            stateless: true
            anonymous: false
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            provider: jwt

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/users/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/users/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
